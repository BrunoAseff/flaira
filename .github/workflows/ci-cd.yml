name: CI/CD Pipeline

on:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.6.3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.19.0
      - run: pnpm install
      - run: pnpm lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.6.3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.19.0
      - run: pnpm install
      - run: pnpm typecheck

  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17.2-alpine3.21
        env:
          POSTGRES_USER: local_user
          POSTGRES_PASSWORD: local_password
          POSTGRES_DB: local_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U local_user -d local_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DATABASE_URL: postgres://local_user:local_password@localhost:5432/local_db
      PORT: 3001
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 10.6.3

      - uses: actions/setup-node@v3
        with:
          node-version: 20.19.0

      - name: Install dependencies
        run: pnpm install

      - name: Start backend
        run: pnpm --filter @flaira/backend run dev &

      - name: Wait for server to be ready
        run: |
          echo "Waiting for backend to be ready..."
          until curl --silent http://localhost:3001/status; do
            sleep 1
          done

      - name: Run backend tests
        run: pnpm --filter @flaira/backend run test    

  build-and-push:
    needs: [lint, typecheck, backend-tests]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.19.0

      - name: Install dependencies
        run: pnpm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::692859947277:role/GitHubActionsECRPushRole
          aws-region: us-east-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to ECR
        run: |
          IMAGE_TAG=latest
          REPO=692859947277.dkr.ecr.us-east-2.amazonaws.com/flaira
          docker build -t $REPO:$IMAGE_TAG .
          docker push $REPO:$IMAGE_TAG

      - name: Force ECS to redeploy latest image
        run: |
          aws ecs update-service \
            --cluster flaira \
            --service flairaprod \
            --force-new-deployment